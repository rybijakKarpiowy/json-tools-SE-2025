name: Java CI
on:
  push:
    branches:
      - '**'
  pull_request:  

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write 
      packages: write
      pull-requests: write 
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
  
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
          server-id: github
      
      - name: Extract branch name
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//-/g')" >> $GITHUB_ENV
      
      - name: Extract version from pom.xml
        run: echo "PROJECT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: Build with Maven
        run: mvn -B package
  
      - name: Run tests
        run: mvn -B test
  
      - name: List build outputs
        run: ls -la target/
  
      - name: Upload built JAR
        if: github.ref != 'refs/heads/main'
        uses: actions/upload-artifact@v4.6.2
        with:
          name: JsonToolsApp-${{ env.BRANCH_NAME }}
          path: target/*.jar
          if-no-files-found: error
          overwrite: true
          retention-days: 7
  
      - name: Publish to GitHub Packages
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: mvn -B deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push tag
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          if git rev-parse "v${{ env.PROJECT_VERSION }}" >/dev/null 2>&1; then
            echo "Tag v${{ env.PROJECT_VERSION }} already exists, skipping tag creation"
          else
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            
            git tag -a "v${{ env.PROJECT_VERSION }}" -m "Release version ${{ env.PROJECT_VERSION }}"
            git push origin "v${{ env.PROJECT_VERSION }}"
            echo "Created and pushed tag v${{ env.PROJECT_VERSION }}"
          fi
